@model ProjetoASP.Models.Aluno
@using ProjetoASP.Models
@{
    ViewBag.Title = "Editar Alunos";
}

<h2>EditaAluno</h2>


@using (Html.BeginForm("EditaAluno","Aluno", FormMethod.Post, new { enctype ="multipart/form-data" }))
{
@Html.AntiForgeryToken()

<div class="form-horizontal">
    <h4>Aluno</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.Naluno)
    <div class="form-group">
        @Html.LabelFor(model => model.PriNome, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.PriNome, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.PriNome, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.UltNome, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.UltNome, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.UltNome, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Morada, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Morada, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Morada, "", new { @class = "text-danger" })
        </div>  
    </div>
        
    <div class="form-group">
        @Html.LabelFor(model => model.Genero, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.DropDownListFor(model => model.Genero, new SelectList(Enum.GetValues(typeof(Genero))), new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Genero, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.DataNasc, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.DataNasc, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.DataNasc, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.AnoEscolaridade, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.AnoEscolaridade, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.AnoEscolaridade, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.ImgPath, "Nova Imagem", htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <img class="img-thumbnaill img-rounded" src="@Url.Content("~" + Model.ImgPath)"
                 width="400" height="400" />
            <input type="file" name="Imagem"/>
        </div>

    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Save" class="btn btn-default" />
        </div>
    </div>
</div>
}

<div>
    @Html.ActionLink("Editar Aluno", "ListarAluno")
</div>

<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
